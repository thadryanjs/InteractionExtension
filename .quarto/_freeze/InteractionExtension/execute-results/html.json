{
  "hash": "1da1e59cc1f747145440aeefdd470543",
  "result": {
    "markdown": "---\ntitle: \"InteractionExtension\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# reproducible R environments\nlibrary(groundhog)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoaded 'groundhog' (version:2.2.0) using R-4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nTips and troubleshooting: https://groundhogR.com\n```\n:::\n\n```{.r .cell-code}\n# dependencies\npkgs <- c(\n  \"dplyr\",\n  \"ggplot2\",\n  \"stringr\",\n  \"ggcorrplot\",\n  \"MASS\", \n  \"Matrix\"\n)\n\n# activate libraries\nsuppressMessages(groundhog.library(pkgs, \"2023-03-01\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a sample sheet\nmeta <- data.frame(\n  sampleID = paste0(\"Sample\", seq(1,9)),\n  river = paste0(\"River\", rep(seq(1,3), each = 3)),\n  site = rep(paste0(\"Site\", c(1,2,3)), 3)\n)\n\nmeta$river_site <- paste(meta$rive, \":\", meta$site, sep = \"\")\nmeta\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sampleID  river  site   river_site\n1  Sample1 River1 Site1 River1:Site1\n2  Sample2 River1 Site2 River1:Site2\n3  Sample3 River1 Site3 River1:Site3\n4  Sample4 River2 Site1 River2:Site1\n5  Sample5 River2 Site2 River2:Site2\n6  Sample6 River2 Site3 River2:Site3\n7  Sample7 River3 Site1 River3:Site1\n8  Sample8 River3 Site2 River3:Site2\n9  Sample9 River3 Site3 River3:Site3\n```\n:::\n:::\n\n\nLet's say there is a river-level correlation. This means:\n\n  - There should be correlation between columns 1-3, 4-6, and 7-9.\n\nLet's assume there is a site-level correlation. For instance, perhaps a level of a contaminant is high near the source and decays as you move further down the rive (up in site number). This means:\n\n  - There should be a correlation between instances of `Site1`s, `Site2`s, and `Site3`s that is steadily decreasing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta$river_site\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"River1:Site1\" \"River1:Site2\" \"River1:Site3\" \"River2:Site1\" \"River2:Site2\"\n[6] \"River2:Site3\" \"River3:Site1\" \"River3:Site2\" \"River3:Site3\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncomplexCorMatrix <- function(meta, effect1, effect2)\n{\n\n  n <- ncol(meta)\n\n  effect1_levels <- unique(meta[, effect1$name])\n  effect2_levels <- unique(meta[, effect2$name])\n\n  interactions <- paste(meta[, effect1$name], \":\",\n      meta[, effect2$name], sep = \"\")\n  \n  n <- length(interactions)\n  \n  # df <- data.frame(matrix(0, nrow = n, ncol = n))\n  df <- data.frame(as.matrix(Diagonal(n, 1)))\n  rownames(df) <- interactions\n  colnames(df) <- interactions\n\n\n  for(i in 1:n){\n    icol <- colnames(df)[i]\n    \n    for(j in 1:n){\n      jcol <- rownames(df)[j]\n\n      if(!(df[jcol, icol]==1)){\n      \n        for(i in 1:length(effect1_levels)) {\n          if(str_detect(icol, effect1_levels[i])) {\n            df[jcol, icol] <- df[jcol, icol] + effect1$cors[i]\n          }\n        }\n\n        for(i in 1:length(effect2_levels)) {\n          if(str_detect(jcol, effect2_levels[i])) {\n            df[jcol, icol] <- df[jcol, icol] + effect2$cors[i]\n          }\n        }\n      }\n\n    }\n  }\n\n\n  df\n}\n\n\nx <- complexCorMatrix(meta,\n  list(name = \"river\", cors = c(0.3, 0.4, 0.5)),\n  list(name = \"site\", cors = c(0.2, 0.3, 0.4))\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             River1:Site1 River1:Site2 River1:Site3 River2:Site1 River2:Site2\nRiver1:Site1          1.0          0.5          0.5          0.6          0.6\nRiver1:Site2          0.6          1.0          0.6          0.7          0.7\nRiver1:Site3          0.7          0.7          1.0          0.8          0.8\nRiver2:Site1          0.5          0.5          0.5          1.0          0.6\nRiver2:Site2          0.6          0.6          0.6          0.7          1.0\nRiver2:Site3          0.7          0.7          0.7          0.8          0.8\nRiver3:Site1          0.5          0.5          0.5          0.6          0.6\nRiver3:Site2          0.6          0.6          0.6          0.7          0.7\nRiver3:Site3          0.7          0.7          0.7          0.8          0.8\n             River2:Site3 River3:Site1 River3:Site2 River3:Site3\nRiver1:Site1          0.6          0.7          0.7          0.7\nRiver1:Site2          0.7          0.8          0.8          0.8\nRiver1:Site3          0.8          0.9          0.9          0.9\nRiver2:Site1          0.6          0.7          0.7          0.7\nRiver2:Site2          0.7          0.8          0.8          0.8\nRiver2:Site3          1.0          0.9          0.9          0.9\nRiver3:Site1          0.6          1.0          0.7          0.7\nRiver3:Site2          0.7          0.8          1.0          0.8\nRiver3:Site3          0.8          0.9          0.9          1.0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggcorrplot(x,\n  lab = TRUE,\n  type = \"lower\",\n  colors = c(\"orange\", \"white\", \"#00693e\")\n) \n```\n\n::: {.cell-output-display}\n![](InteractionExtension_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# for(s in c(\"one\", \"two\", \"three\")) {\n#   if(grep(\"o\", s)) {\n#     print(\"hello\")\n#   }\n# }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# sigma <- matrix(\n#   c(\n#     0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n#     0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n#     0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n#     0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0,\n#     0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0,\n#     0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0,\n#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0,\n#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0,\n#     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5\n#   ), 9,9\n# ) %>% t\n\n# sigma %>% data.frame()\n\n# (d <- Diagonal(n = 9, x = 0.5))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(11)\nx = runif(100)\nd = abs(outer(x,x,\"-\")) # compute distance matrix, d_{ij} = |x_i - x_j|\nl = 1 # length scale\nSigma_SE = exp(-d^2/(2*l^2)) # squared exponential kernel\n\nx_1 <- runif(x)\ny = mvtnorm::rmvnorm(1,sigma=Sigma_SE)\nplot(x,y)\n```\n\n::: {.cell-output-display}\n![](InteractionExtension_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "InteractionExtension_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}